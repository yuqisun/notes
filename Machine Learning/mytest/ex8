1.estimateGaussian.m

mu=sum(X)./m;
sigma2=sum((X.-mu).^2)./m;


2.selectThreshold.m

	tp=sum((pval<epsilon)&(yval==1));
	fp=sum((pval<epsilon)&(yval==0));
	fn=sum((pval>=epsilon)&(yval==1));

	prec=tp/(tp+fp);
	rec=tp/(tp+fn);

	F1=2*prec*rec/(prec+rec);
  
  
  
3.cofiCostFunc.m

% calculating cost function.
diff = (X*Theta'-Y);
J = sum((diff.^2)(R==1))/2;
J = J + lambda*sum(sum(Theta.^2))/2;  % regularized term of theta.
J = J + lambda*sum(sum(X.^2))/2;     % regularized term of x.

X_grad = (diff.*R)*Theta;                 %unregularized vectorized implementation
Theta_grad = ((diff.*R)'*X);              %unregularized vectorized implementation


X_grad = X_grad + (lambda * X);             % regularized
Theta_grad = Theta_grad + (lambda * Theta);  % regularized

